(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9184],{6125:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/article/docker/docker-compose",function(){return t(7265)}])},7265:function(n,e,t){"use strict";t.r(e),t.d(e,{__N_SSG:function(){return i},frontMatter:function(){return s},tag:function(){return u},title:function(){return a},updated:function(){return d}});var r=t(4246),o=t(1670),c=t(5685),i=!0,s={title:"Docker Compose",tag:["docker"],updated:"2023-02-22T07:57:53.000Z"},a="Docker Compose",u=["docker"],d="2023-02-22T07:57:53.000Z",l=function(n){return(0,r.jsx)(c.s,n)};function f(n){var e=Object.assign({h1:"h1",pre:"pre",code:"code",p:"p",a:"a"},(0,o.ah)(),n.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h1,{id:"示例",children:"示例"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-yaml",children:'version: "3.9"\nservices:\n  nginx:\n    image: nginx:1.22-alpine\n    container_name: nginx\n    volumes:\n      - ./nginx/nginx.conf:/etc/nginx/nginx.conf\n      - static:/var/www/static:ro\n    ports:\n      - "80:80"\n    restart: always\nvolumes:\n  static:\nnetworks:\n  # default代表所有服务的默认网络\n  default:\n    # 网络名称\n    name: network-name\n    # 网络模式，默认为bridge（所有模式：bridge、host、overlay、macvlan以及none）\n    driver: bridge\n    # 网络管理\n    ipam:\n      driver: default\n      config:\n        # 指定子网网段\n        - subnet: 172.58.0.0/16\n'})}),"\n",(0,r.jsx)(e.h1,{id:"参考文档",children:"参考文档"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.a,{href:"https://docs.docker.com/compose/gettingstarted/",children:"https://docs.docker.com/compose/gettingstarted/"})})]})}e.default=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,r.jsx)(l,Object.assign({},n,{children:(0,r.jsx)(f,n)}))}},3121:function(n){"use strict";n.exports=ReactTransitionGroup},9378:function(n){"use strict";n.exports=algoliasearch},7513:function(n){"use strict";n.exports=rxjs}},function(n){n.O(0,[9894,2128,3554,5685,9774,2888,179],function(){return n(n.s=6125)}),_N_E=n.O()}]);