(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7942],{8162:function(n,t,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/article/frontend/compose",function(){return e(633)}])},633:function(n,t,e){"use strict";e.r(t),e.d(t,{__N_SSG:function(){return d},default:function(){return j},description:function(){return m},frontMatter:function(){return h},tag:function(){return b},title:function(){return g},updated:function(){return w}});var o,c,r,s=e(4246),i=e(1670),u=e(1037),a=e(9312),l=e(7667),f=(0,e(5360).qC)([(o=(0,u._)(function(n,t){return(0,a.Jh)(this,function(e){switch(e.label){case 0:return n.a="a",console.log("第一个， next之前"),[4,t()];case 1:return e.sent(),console.log("第一个， next之后"),[2]}})}),function(n,t){return o.apply(this,arguments)}),(c=(0,u._)(function(n,t){return(0,a.Jh)(this,function(e){switch(e.label){case 0:return n.b="b",console.log("第二个， next之前"),[4,t()];case 1:return e.sent(),console.log("第二个， next之后"),[2]}})}),function(n,t){return c.apply(this,arguments)}),(r=(0,u._)(function(n,t){return(0,a.Jh)(this,function(e){switch(e.label){case 0:return n.c="c",console.log("第三个， next之前"),[4,t()];case 1:return e.sent(),console.log("第三个， next之后"),[2]}})}),function(n,t){return r.apply(this,arguments)})]),x=function(){var n=(0,l.useCallback)(function(){f({}).then(function(n){console.log(n)})},[]);return(0,s.jsx)("button",{onClick:n,children:"点击执行"})},p=e(5685),d=!0,h={title:"Compose",description:"Koa中间件的实现原理",tag:["web前端"],updated:"2023-02-22T07:57:53.000Z"},g="Compose",m="Koa中间件的实现原理",b=["web前端"],w="2023-02-22T07:57:53.000Z",C=function(n){return(0,s.jsx)(p.s,n)};function _(n){var t=Object.assign({pre:"pre",code:"code"},(0,i.ah)(),n.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",children:"export interface Middleware<C> {\n  (ctx: C, next: () => Promise<void>): Promise<void>;\n}\nexport function compose<C>(middlewares: Middleware<C>[]) {\n  return async function(ctx: C) {\n    function dispatch(i = 0): Promise<void> {\n      const fn = middlewares[i];\n      if (i >= middlewares.length) {\n        return Promise.resolve();\n      }\n      return Promise.resolve(fn(ctx, function next() {\n        return dispatch(i + 1);\n      }));\n    }\n    await dispatch();\n    return ctx;\n  };\n}\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",children:"import { FC, useCallback } from 'react';\nimport { compose } from '@shared/utils';\n\n/* eslint-disable no-console */\nconst f = compose<any>([async function(ctx, next) {\n  ctx.a = 'a';\n  console.log('第一个， next之前');\n  await next();\n  console.log('第一个， next之后');\n}, async function(ctx, next) {\n  ctx.b = 'b';\n  console.log('第二个， next之前');\n  await next();\n  console.log('第二个， next之后');\n}, async function(ctx, next) {\n  ctx.c = 'c';\n  console.log('第三个， next之前');\n  await next();\n  console.log('第三个， next之后');\n}]);\n\nexport const ComposeExample: FC = () => {\n\n  const test = useCallback(() => {\n    f({}).then(ctx => {\n      console.log(ctx);\n    });\n  }, []);\n\n  return (\n    <button onClick={test}>点击执行</button>\n  );\n};\n"})}),"\n","\n",(0,s.jsx)(x,{})]})}var j=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,s.jsx)(C,Object.assign({},n,{children:(0,s.jsx)(_,n)}))}},3121:function(n){"use strict";n.exports=ReactTransitionGroup},9378:function(n){"use strict";n.exports=algoliasearch},7513:function(n){"use strict";n.exports=rxjs}},function(n){n.O(0,[9894,2128,3554,5685,9774,2888,179],function(){return n(n.s=8162)}),_N_E=n.O()}]);