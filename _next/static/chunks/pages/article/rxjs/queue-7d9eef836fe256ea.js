(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1681],{4116:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/article/rxjs/queue",function(){return t(4783)}])},4783:function(n,e,t){"use strict";t.r(e),t.d(e,{__N_SSG:function(){return M},default:function(){return $},description:function(){return y},frontMatter:function(){return N},tag:function(){return E},title:function(){return C},updated:function(){return F}});var r=t(4246),s=t(1670),c=t(7667),i=t(7513),o=(0,i.interval)(1e3).pipe((0,i.take)(10),(0,i.tap)(function(n){console.log("count1:".concat(n))})),a=(0,i.interval)(3e3).pipe((0,i.take)(2),(0,i.tap)(function(n){console.log("count2:".concat(n))})),u=(0,i.interval)(3e3).pipe((0,i.take)(5),(0,i.tap)(function(n){console.log("count3:".concat(n))})),l=(0,i.interval)(2e3).pipe((0,i.take)(10),(0,i.tap)(function(n){console.log("count4:".concat(n))})),p=(0,i.interval)(5e3).pipe((0,i.take)(5),(0,i.tap)(function(n){console.log("count5:".concat(n))})),d=function(){var n=(0,c.useRef)(),e=(0,c.useCallback)(function(){var e;null===(e=n.current)||void 0===e||e.unsubscribe(),n.current=(0,i.merge)(o,a,u,l,p,2).subscribe()},[]);return(0,c.useEffect)(function(){return function(){var e;return null===(e=n.current)||void 0===e?void 0:e.unsubscribe()}},[]),(0,r.jsx)("div",{style:{padding:"20px 0"},children:(0,r.jsx)("button",{onClick:e,children:"开始"})})},f=function(){var n=(0,c.useRef)(null);return(0,c.useEffect)(function(){var e,t=(e=n.current,(0,i.fromEvent)(e,"click").pipe((0,i.mergeScan)(function(n,e,t){var r=10*Math.random();return(0,i.timer)(1e3*r).pipe((0,i.map)(function(){return n+1}),(0,i.tap)(function(){console.log("第".concat(t+1,"个下载完毕，用时").concat(r,"秒"))}))},0,2)).subscribe());return function(){return t.unsubscribe()}},[]),(0,r.jsx)("div",{style:{padding:"20px 0"},children:(0,r.jsx)("button",{ref:n,children:"下载"})})},h=t(53),m=t(5322),v=t(8062),x=t(5360),g=t(5633),b=t.n(g),j=function(){var n=.3*Math.random();return(0,i.interval)(1e3).pipe((0,i.scan)(function(e){return Math.min(1,e+n)},0),(0,i.mergeMap)(function(n){return n>=1?(0,i.concat)((0,i.of)(n),(0,i.of)(null)):(0,i.of)(n)}),(0,i.takeWhile)(function(n){return"number"==typeof n}))},k=function(){var n=(0,h._)((0,c.useState)([]),2),e=n[0],t=n[1],s=(0,c.useRef)((0,c.useMemo)(function(){return new i.Subject},[])),o=(0,c.useCallback)(function(){var n="".concat((0,x.Zo)(e.length+1),".zip");s.current.next(n)},[e.length]);return(0,c.useEffect)(function(){var n=s.current.pipe((0,i.mergeMap)(function(n){var e={name:n,percent:0,status:"waiting"};return t(function(n){var t=(0,m._)(n);return t.push(e),t}),(0,i.of)(e)}),(0,i.mergeMap)(function(n){return j().pipe((0,i.tap)(function(e){n.percent=e,n.status=e<1?"pending":"done",t(function(n){return(0,m._)(n)})}))},3)).subscribe();return function(){n.unsubscribe()}},[]),(0,r.jsxs)("div",{children:[(0,r.jsxs)("div",{children:[(0,r.jsx)(v.ZP,{onClick:o,children:"添加下载任务"}),(0,r.jsx)("span",{children:"点击左侧按钮添加任务"})]}),(0,r.jsx)("ul",{className:b().list,children:e.map(function(n){return(0,r.jsxs)("li",{children:[(0,r.jsx)("span",{children:n.name}),(0,r.jsxs)("span",{className:b().percent,children:[(100*n.percent).toFixed(2),"%"]}),(0,r.jsx)("span",{className:(0,x.UU)(b()[n.status]),children:"waiting"===n.status?"等待中":"pending"===n.status?"下载中":"已完成"})]},n.name)})})]})},w=function(n){var e,t;return[function(){return new Promise(function(e,r){t=r;var s=.3*Math.random(),c=0;null==n||n(c);var i=window.setInterval(function(){c=Math.min(c+s,1),null==n||n(c),c>=1&&(window.clearInterval(i),e())},1e3)})},function(){window.clearInterval(e),null==t||t("cancel")}]},_=function(){var n=(0,h._)((0,c.useState)([]),2),e=n[0],t=n[1],s=(0,c.useRef)((0,c.useMemo)(function(){return new x.ci(3)},[])),i=(0,c.useCallback)(function(){var n={name:"".concat((0,x.Zo)(e.length+1),".zip"),percent:0,status:"waiting"};t(function(e){var t=(0,m._)(e);return t.push(n),t});var r=(0,h._)(w(function(e){n.percent=e,n.status=e>=1?"done":"pending",t(function(n){return(0,m._)(n)})}),1)[0];s.current.addTask(r)},[e.length]);return(0,r.jsxs)("div",{children:[(0,r.jsxs)("div",{children:[(0,r.jsx)(v.ZP,{onClick:i,children:"添加下载任务"}),(0,r.jsx)("span",{children:"点击左侧按钮添加任务"})]}),(0,r.jsx)("ul",{className:b().list,children:e.map(function(n){return(0,r.jsxs)("li",{children:[(0,r.jsx)("span",{children:n.name}),(0,r.jsxs)("span",{className:b().percent,children:[(100*n.percent).toFixed(2),"%"]}),(0,r.jsx)("span",{className:(0,x.UU)(b()[n.status]),children:"waiting"===n.status?"等待中":"pending"===n.status?"下载中":"已完成"})]},n.name)})})]})},T=t(5685),M=!0,N={title:"使用rxjs实现队列",description:"使用rxjs实现队列",tag:["web前端","rxjs"],updated:"2023-03-20T03:34:06.000Z"},C="使用rxjs实现队列",y="使用rxjs实现队列",E=["web前端","rxjs"],F="2023-03-20T03:34:06.000Z",S=function(n){return(0,r.jsx)(T.s,n)};function R(n){var e=Object.assign({h2:"h2",pre:"pre",code:"code",p:"p",blockquote:"blockquote",h3:"h3"},(0,s.ah)(),n.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{id:"固定任务数量",children:"固定任务数量"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-typescript",children:"import { interval, merge, take, tap } from 'rxjs';\n\nconst count1 = interval(1000).pipe(\n  take(10),\n  tap(v => {\n    // eslint-disable-next-line no-console\n    console.log(`count1:${v}`);\n  }),\n);\n\nconst count2 = interval(3000).pipe(\n  take(2),\n  tap(v => {\n    // eslint-disable-next-line no-console\n    console.log(`count2:${v}`);\n  }),\n);\n\nconst count3 = interval(3000).pipe(\n  take(5),\n  tap(v => {\n    // eslint-disable-next-line no-console\n    console.log(`count3:${v}`);\n  }),\n);\n\nconst count4 = interval(2000).pipe(\n  take(10),\n  tap(v => {\n    // eslint-disable-next-line no-console\n    console.log(`count4:${v}`);\n  }),\n);\n\nconst count5 = interval(5000).pipe(\n  take(5),\n  tap(v => {\n    // eslint-disable-next-line no-console\n    console.log(`count5:${v}`);\n  }),\n);\n\nexport function startQueue() {\n  // 表示同时执行以上所有observable，但最大队列数为2\n  return merge(count1, count2, count3, count4, count5, 2).subscribe();\n}\n"})}),"\n","\n",(0,r.jsx)(d,{}),"\n",(0,r.jsxs)(e.p,{children:["点击",(0,r.jsx)(e.code,{children:"开始"}),"执行startQueue，打开f12查看打印结果"]}),"\n",(0,r.jsx)(e.h2,{id:"动态任务数量",children:"动态任务数量"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-typescript",children:"import { fromEvent, mergeScan, tap, timer, map } from 'rxjs';\n\nexport function dynamicQueue(dom: HTMLElement) {\n  return fromEvent(dom, 'click').pipe(\n    mergeScan((acc, value, index) => {\n      const duration = Math.random() * 10;\n      return timer(duration * 1000).pipe(\n        map(() => acc + 1),\n        tap(() => {\n          // eslint-disable-next-line no-console\n          console.log(`第${index + 1}个下载完毕，用时${duration}秒`);\n        }),\n      );\n    }, 0, 2), // 0为seed，2为最大队列数\n  ).subscribe();\n}\n"})}),"\n","\n",(0,r.jsx)(f,{}),"\n",(0,r.jsxs)(e.p,{children:["连续点击",(0,r.jsx)(e.code,{children:"下载"}),"创建多个下载任务，模拟最大并发下载为2的场景"]}),"\n",(0,r.jsx)(e.h2,{id:"模拟下载场景",children:"模拟下载场景"}),"\n",(0,r.jsxs)(e.blockquote,{children:["\n",(0,r.jsx)(e.p,{children:"模拟最大并发数量为3的下载队列"}),"\n"]}),"\n","\n",(0,r.jsx)(k,{}),"\n",(0,r.jsx)(e.h3,{id:"源码",children:"源码"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-tsx",children:"import { Button } from 'antd';\nimport { combineClass, randomStr } from '@shared/utils';\nimport { FC, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { Subject, interval, tap, mergeMap, of, concat, takeWhile, Observable, scan } from 'rxjs';\nimport styles from './downloader.module.scss';\n\n// 模拟下载过程\nconst virtualDownload = () => {\n  const speed = Math.random() * 0.3;\n  return interval(1000).pipe(\n    scan((acc) => Math.min(1, acc + speed), 0),\n    mergeMap((percent) => {\n      if (percent >= 1) {\n        return concat(of(percent), of(null));\n      }\n      return of(percent);\n    }),\n    takeWhile(v => typeof v === 'number'),\n  ) as Observable<number>;\n};\n\ninterface VirtualFile {\n  name: string;\n  percent: number;\n  status: 'done' | 'waiting' | 'pending';\n}\n\nconst Downloader: FC = () => {\n\n  const [files, setFiles] = useState<VirtualFile[]>([]);\n\n  const downloadTrigger = useRef(useMemo(() => {\n    return new Subject<string>();\n  }, []));\n\n  const onClick = useCallback(() => {\n    const filename = `${randomStr(files.length + 1)}.zip`; // 随机模拟一个文件名\n    downloadTrigger.current.next(filename);\n  }, [files.length]);\n\n  useEffect(() => {\n    const subscription = downloadTrigger.current.pipe(\n      mergeMap(name => {\n        const newFile: VirtualFile = {\n          name,\n          percent: 0,\n          status: 'waiting',\n        };\n        setFiles(prev => {\n          const next = [...prev];\n          next.push(newFile);\n          return next;\n        });\n        return of(newFile);\n      }),\n      mergeMap((value) => {\n        return virtualDownload().pipe(\n          tap((percent) => {\n            value.percent = percent;\n            value.status = percent < 1 ? 'pending' : 'done';\n            setFiles(prev => [...prev]);\n          }),\n        );\n      }, 3), // 3为最大并发数\n    ).subscribe();\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, []);\n\n  return (\n    <div>\n      <div>\n        <Button onClick={onClick}>添加下载任务</Button>\n        <span>点击左侧按钮添加任务</span>\n      </div>\n      <ul className={styles.list}>\n        {\n          files.map(v => {\n            return (\n              <li key={v.name}>\n                <span>{v.name}</span>\n                <span className={styles.percent}>{(v.percent * 100).toFixed(2)}%</span>\n                <span\n                  className={combineClass(styles[v.status])}\n                >{v.status === 'waiting' ? '等待中' : v.status === 'pending' ? '下载中' : '已完成'}</span>\n              </li>\n            );\n          })\n        }\n      </ul>\n    </div>\n  );\n};\n\nexport { Downloader };\n"})}),"\n",(0,r.jsx)(e.h2,{id:"promise版本",children:"Promise版本"}),"\n","\n",(0,r.jsx)(_,{}),"\n",(0,r.jsx)(e.h3,{id:"源码-1",children:"源码"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-tsx",children:"interface Task<T>{\n  (): Promise<T>;\n}\n\nexport class Queue<T=any>{\n  private concurrent: number;\n  private tasks: Task<T>[] = [];\n  private pending = new Set<ReturnType<Task<T>>>();\n  private status: 0 | 1 = 1;\n  constructor(concurrent = 3) {\n    this.concurrent = concurrent;\n  }\n  private check() {\n    if (this.status === 1) {\n      const count = this.concurrent - this.pending.size;\n      this.tasks.splice(0, count).forEach(fn => {\n        const ret = fn();\n        ret.finally(() => {\n          this.pending.delete(ret);\n          this.check();\n        });\n        this.pending.add(ret);\n      });\n    }\n  }\n  public setConcurrent(concurrent: number) {\n    this.concurrent = concurrent;\n    this.check();\n  }\n  public addTask(...tasks: Task<T>[]) {\n    this.tasks.push(...tasks);\n    this.check();\n  }\n  public start() {\n    this.status = 1;\n    this.check();\n  }\n  public stop() {\n    this.status = 0;\n  }\n}\n"})})]})}var $=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,r.jsx)(S,Object.assign({},n,{children:(0,r.jsx)(R,n)}))}},5633:function(n){n.exports={list:"downloader_list__JuV_y",pending:"downloader_pending__TbIL4",done:"downloader_done__AQYKK",percent:"downloader_percent__6NAuE"}},3121:function(n){"use strict";n.exports=ReactTransitionGroup},9378:function(n){"use strict";n.exports=algoliasearch},7513:function(n){"use strict";n.exports=rxjs}},function(n){n.O(0,[9894,2128,3554,5685,9774,2888,179],function(){return n(n.s=4116)}),_N_E=n.O()}]);